#!/usr/bin/env node
const DROPSTACK_BASE_URL = process.env.DROPSTACK_BASE_URL || `https://api.dropstack.run`;

const path = require('path');
const fs = require('fs');
const program = require('commander');
const fetch = require('node-fetch');
const stackSettings = require('../lib/stack-settings')();

if(!fs.existsSync(process.argv[2])) process.argv.splice(2, 0, process.cwd());

program
  .action(list)
  .parse(process.argv);

function list(){
  stackSettings.load()
  .then(settings => Boolean(!(settings.token && settings.username)) ? Promise.reject(new Error('Login please')) : settings)
  .then(settings => fetch(`${DROPSTACK_BASE_URL}/stacks`, { headers: { Authorization: `Bearer ${settings.token}`, } }).then(response => response.json()))
  .then(data => Boolean(data.message) ? Promise.reject(new Error(data.message)) : data)
  .then(data => (data || []).map(x => `| ${x.serviceName} | ${x.serviceUrl} | ${x.serviceCName || '-'} |`))
  .then(data => {
    if(data.length > 0) return data.map(x => console.log(x));
    console.log('Nothing deployed');
  })
  .catch(err => {
    if(err.message === 'Login please'){
      console.error(err.message)
      process.exit(1)
    }
    console.error(`An error occurred: ${err.message}`);
    process.exit(1);
  });
}
