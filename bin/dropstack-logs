#!/usr/bin/env node
const DROPSTACK_BASE_URL = process.env.DROPSTACK_BASE_URL || `https://api.dropstack.run`;

const fs = require('fs');
const path = require('path');
const program = require('commander');
const fetch = require('node-fetch');
const stackSettings = require('../lib/stack-settings')();

program
  .arguments('<name>')
  .action(x => log(x))
  .parse(process.argv);

function log(name){
  console.log(`Logs for ${name}`);
  stackSettings.load()
  .then(settings => Boolean(!(settings.token && settings.username)) ? Promise.reject(new Error('Login please')) : settings)
  .then(settings => fetch(`${DROPSTACK_BASE_URL}/stacks/${name}/logs`, { headers: { Authorization: `Bearer ${settings.token}`, } }))
  .then(response => {
    return new Promise((resolve, reject) => {
      response.body.on('end', () => resolve());
      response.body.on('data', data => {
        try {
          const msg = JSON.parse(data);
          console.log(msg.log)
        } catch(err) {
          reject(err);
        }
      });

    });
  })
  .catch(err => {
    if(err.message === 'Login please'){
      console.error(err.message)
      process.exit(1)
    }
    console.error(`An error occurred: ${err.message}`);
    process.exit(1);
  });
}
