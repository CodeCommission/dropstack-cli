#!/usr/bin/env node
const program = require('commander');
const updateNotifier = require('update-notifier');
const nodeVersion = require('node-version');
const pkg = require('../package.json');

updateNotifier({pkg}).notify();

if (nodeVersion.major < 6) {
  console.error(chalk.red(`Error! Linklet requires at least version 6 of NodeJS. Please upgrade your NodeJS version please.`));
  process.exit(1);
}

process.on('SIGTERM', () => {
  process.stderr.write('\x1B[?25h'); //show terminal cursor
  process.exit(0);
});

process.on('SIGINT', () => {
  process.stderr.write('\x1B[?25h'); //show terminal cursor
  process.exit(0);
});

program
  .version(`${pkg.name} v${pkg.version}`)
  .command('login <url>', 'Log in or switch to deployment environment. (default https://api.cloud.dropstack.run)')
  .command('signup <url>', 'Sign up to deployment environment. (default https://api.cloud.dropstack.run)')
  .command('logout', 'Log-out from deployment environment.')
  .command('inspect [name]', 'Show instance informations.')
  .alias('info')
  .command('account', 'Show account informations.')
  .alias('infos')
  .command('activities', 'Show account activities.')
  .alias('activity')
  .command('deploy [folder]', 'Deploy to environment.')
  .alias('add')
  .command('list', 'List your active environment deployments.')
  .alias('ls')
  .command('remove [name]', 'Remove deployment from environment.')
  .alias('rm')
  .command('ssl [name]', 'Manage SSL for deployments.')
  .command('domain [name]', 'Manage domain for deployments.')
  .alias('alias')
  .command('logs [name]', 'Show StdOut/StdErr logs for deployment.')
  .alias('log')
  .command('metric [name]', 'Show metrics for deployments.')
  .alias('metrics')
  .command('scale [name]', 'Scale instances for deployments.')
  .command('mapping [name]', 'Manage route mappings for deployment.')
  .alias('map')
  .alias('mappings')
  .parse(process.argv);
